geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, fill = Treatment),
size = 5, shape = 21)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
colnames(prueba_reversa_estadisticos)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, fill = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(ymin = media_porcentaje_zonas - se_porcentaje_zonas, ymax = media_porcentaje_zonas + se_porcentaje_zonas), width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, fill = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso), width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, fill = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso), width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
View(prueba_reversa_estadisticos)
View(prueba_reversa_estadisticos)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas,
ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment, fill = colour,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas,
ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment, fill = Treatment,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas,
ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment, fill = Treatment,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = deseada_vs_opuesta, y = media_porcentaje_zonas, colour = Treatment),
size = 5, shape = 21)+
#geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas,
#                                                      ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso),
#              width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment, fill = Treatment,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = deseada_vs_opuesta, y = media_porcentaje_zonas, fill = Treatment),
size = 5, shape = 21)+
#geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas,
#                                                      ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso),
#              width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment, fill = Treatment,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, fill = deseada_vs_opuesta),
size = 5, shape = 21)+
#geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas,
#                                                      ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso),
#              width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment, fill = colour,),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas,
ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_zonas, colour = Treatment, fill = Treatment),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_zonas,
ymin = media_porcentaje_zonas - se_porcentaje_zonaso, ymax = media_porcentaje_zonas + se_porcentaje_zonaso),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
View(prueba_reversa)
View(prueba_reversa)
prueba_reversa <- subset(datos_crudos, (Stage=='prueba_rev')) |> # filtra rows solo de prueba_reversa
mutate( # este comando de mutate saca el porcentaje de zonas deseadas vs zonas opuestas
porcentaje_zona_blanco = ((SWcuadrante...time * 100) / 60),
# porcentaje_zonas_opuestas = (((SE.cuadrante...time + NW.Cuadrante...time + NE.cuadrante...time) * 100) / 60),
porcentaje_zonas_opuestas = 100 - porcentaje_zona_blanco, # más fácil que la de arriba
comprobar_porcentajes = porcentaje_zona_blanco + porcentaje_zonas_opuestas # solo para combprobar que la suma sea el 100% (60 segundos)
) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = starts_with("porcentaje_"),
names_to = "deseada_vs_opuesta",
values_to = "porcentaje_zonas"
)
View(prueba_reversa)
View(prueba_reversa)
prueba_reversa_estadisticos <- prueba_reversa |>
group_by(Treatment, deseada_vs_opuesta) %>%
dplyr::summarise(N_porcentaje_zonas    = length(porcentaje_zonas),
media_porcentaje_zonas = mean(porcentaje_zonas),
sd_porcentaje_zonas   = sd(porcentaje_zonas),
se_porcentaje_zonaso   = sd_porcentaje_zonas / sqrt(N_porcentaje_zonas))
View(prueba_reversa_estadisticos)
View(prueba_reversa_estadisticos)
colnames(prueba_reversa)
prueba_reversa <- subset(datos_crudos, (Stage=='prueba_rev')) |> # filtra rows solo de prueba_reversa
mutate( # este comando de mutate saca el porcentaje de zonas deseadas vs zonas opuestas
porcentaje_cuadrante_blanco_SO = ((SWcuadrante...time * 100) / 60),
porcentaje_cuadrante_antiguo_NE = ((NEcuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_1 = ((SEcuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_2 = ((NWcuadrante...time * 100) / 60),
comprobar_porcentajes = porcentaje_cuadrante_blanco_SO + porcentaje_cuadrante_antiguo_NE + porcentaje_cuadrante_opuesto_1 + porcentaje_cuadrante_opuesto_2 # solo para combprobar que la suma sea el 100% (60 segundos)
) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = starts_with("porcentaje_"),
names_to = "tipo_cuadrante",
values_to = "porcentaje_en_cuadrante"
)
prueba_reversa <- subset(datos_crudos, (Stage=='prueba_rev')) |> # filtra rows solo de prueba_reversa
mutate( # este comando de mutate saca el porcentaje de zonas deseadas vs zonas opuestas
porcentaje_cuadrante_blanco_SO = ((SWcuadrante...time * 100) / 60),
porcentaje_cuadrante_antiguo_NE = ((NE.cuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_1 = ((SE.cuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_2 = ((NW.cuadrante...time * 100) / 60),
comprobar_porcentajes = porcentaje_cuadrante_blanco_SO + porcentaje_cuadrante_antiguo_NE + porcentaje_cuadrante_opuesto_1 + porcentaje_cuadrante_opuesto_2 # solo para combprobar que la suma sea el 100% (60 segundos)
) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = starts_with("porcentaje_"),
names_to = "tipo_cuadrante",
values_to = "porcentaje_en_cuadrante"
)
colnames(prueba_reversa)
prueba_reversa <- subset(datos_crudos, (Stage=='prueba_rev')) |> # filtra rows solo de prueba_reversa
mutate( # este comando de mutate saca el porcentaje de zonas deseadas vs zonas opuestas
porcentaje_cuadrante_blanco_SO = ((SWcuadrante...time * 100) / 60),
porcentaje_cuadrante_antiguo_NE = ((NE.cuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_1 = ((SE.cuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_2 = ((NW.Cuadrante...time * 100) / 60),
comprobar_porcentajes = porcentaje_cuadrante_blanco_SO + porcentaje_cuadrante_antiguo_NE + porcentaje_cuadrante_opuesto_1 + porcentaje_cuadrante_opuesto_2 # solo para combprobar que la suma sea el 100% (60 segundos)
) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = starts_with("porcentaje_"),
names_to = "tipo_cuadrante",
values_to = "porcentaje_en_cuadrante"
)
datos_crudos <- read.csv("datos_crudos_any_maze.csv")
prueba_reversa <- subset(datos_crudos, (Stage=='prueba_rev')) |> # filtra rows solo de prueba_reversa
mutate( # este comando de mutate saca el porcentaje de zonas deseadas vs zonas opuestas
porcentaje_cuadrante_blanco_SO = ((SWcuadrante...time * 100) / 60),
porcentaje_cuadrante_antiguo_NE = ((NE.cuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_1 = ((SE.cuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_2 = ((NW.Cuadrante...time * 100) / 60),
comprobar_porcentajes = porcentaje_cuadrante_blanco_SO + porcentaje_cuadrante_antiguo_NE + porcentaje_cuadrante_opuesto_1 + porcentaje_cuadrante_opuesto_2 # solo para combprobar que la suma sea el 100% (60 segundos)
) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = starts_with("porcentaje_"),
names_to = "tipo_cuadrante",
values_to = "porcentaje_en_cuadrante"
)
View(prueba_reversa)
View(prueba_reversa)
View(prueba_reversa)
View(prueba_reversa)
colnames(prueba_reversa)
prueba_reversa_estadisticos <- prueba_reversa |>
group_by(Treatment, deseada_vs_opuesta, tipo_cuadrante) %>%
dplyr::summarise(N_porcentaje_en_cuadrante  = length(porcentaje_en_cuadrante),
media_porcentaje_en_cuadrante = mean(porcentaje_en_cuadrante),
sd_porcentaje_en_cuadrante   = sd(porcentaje_en_cuadrante),
se_porcentaje_en_cuadrante   = sd_porcentaje_en_cuadrante / sqrt(N_porcentaje_en_cuadrante))
prueba_reversa_estadisticos <- prueba_reversa |>
group_by(Treatment, tipo_cuadrante) %>%
dplyr::summarise(N_porcentaje_en_cuadrante  = length(porcentaje_en_cuadrante),
media_porcentaje_en_cuadrante = mean(porcentaje_en_cuadrante),
sd_porcentaje_en_cuadrante   = sd(porcentaje_en_cuadrante),
se_porcentaje_en_cuadrante   = sd_porcentaje_en_cuadrante / sqrt(N_porcentaje_en_cuadrante))
View(prueba_reversa_estadisticos)
View(prueba_reversa_estadisticos)
colnames(prueba_reversa_estadisticos)
ggplot(prueba_reversa,
aes(x = Treatment, y = porcentaje_en_cuadrante, fill = Treatment)) +
geom_jitter() +
geom_col(data = prueba_reversa_estadisticos, aes(x = Treatment , y = media_porcentaje_zonas, alpha = 0.5))+
facet_grid(~ tipo_cuadrante)
ggplot(prueba_reversa,
aes(x = Treatment, y = porcentaje_en_cuadrante, fill = Treatment)) +
geom_jitter() +
geom_col(data = prueba_reversa_estadisticos, aes(x = Treatment , y = media_porcentaje_en_cuadrante, alpha = 0.5))+
facet_grid(~ tipo_cuadrante)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_en_cuadrante, colour = Treatment, fill = Treatment),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante,
ymin = media_porcentaje_en_cuadrante - se_porcentaje_en_cuadrante, ymax = media_pporcentaje_en_cuadrante + se_porcentaje_en_cuadrante),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~deseada_vs_opuesta)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_en_cuadrante, colour = Treatment, fill = Treatment),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante,
ymin = media_porcentaje_en_cuadrante - se_porcentaje_en_cuadrante, ymax = media_pporcentaje_en_cuadrante + se_porcentaje_en_cuadrante),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_cuadrante)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_en_cuadrante, colour = Treatment, fill = Treatment),
size = 5, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante,
ymin = media_porcentaje_en_cuadrante - se_porcentaje_en_cuadrante, ymax = media_porcentaje_en_cuadrante + se_porcentaje_en_cuadrante),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_cuadrante)
View(prueba_reversa_estadisticos)
View(prueba_reversa_estadisticos)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_en_cuadrante, colour = Treatment, fill = Treatment),
size = 1, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante,
ymin = media_porcentaje_en_cuadrante - se_porcentaje_en_cuadrante, ymax = media_porcentaje_en_cuadrante + se_porcentaje_en_cuadrante),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_cuadrante)
View(prueba_reversa)
View(prueba_reversa)
View(prueba_reversa_estadisticos)
View(prueba_reversa_estadisticos)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_en_cuadrante, colour = Treatment, fill = Treatment),
size = 1, shape = 21,)+
geom_boxplot(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante,
ymin = media_porcentaje_en_cuadrante - se_porcentaje_en_cuadrante, ymax = media_porcentaje_en_cuadrante + se_porcentaje_en_cuadrante),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_cuadrante)
ggplot() +
geom_jitter(data = prueba_reversa, aes(x = Treatment, y = porcentaje_en_cuadrante, colour = Treatment, fill = Treatment),
size = 1, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos, aes(x = Treatment, y = media_porcentaje_en_cuadrante,
ymin = media_porcentaje_en_cuadrante - se_porcentaje_en_cuadrante, ymax = media_porcentaje_en_cuadrante + se_porcentaje_en_cuadrante),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_cuadrante)
write.csv(prueba_reversa, "prueba_reversa.csv")
View(prueba_reversa)
View(prueba_reversa)
prueba_reversa <- subset(datos_crudos, (Stage=='prueba_rev')) |> # filtra rows solo de prueba_reversa
mutate( # este comando de mutate saca el porcentaje de zonas deseadas vs zonas opuestas
porcentaje_cuadrante_blanco_SO = ((SWcuadrante...time * 100) / 60),
porcentaje_cuadrante_antiguo_NE = ((NE.cuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_1 = ((SE.cuadrante...time * 100) / 60),
porcentaje_cuadrante_opuesto_2 = ((NW.Cuadrante...time * 100) / 60),
comprobar_porcentajes = porcentaje_cuadrante_blanco_SO + porcentaje_cuadrante_antiguo_NE + porcentaje_cuadrante_opuesto_1 + porcentaje_cuadrante_opuesto_2 # solo para combprobar que la suma sea el 100% (60 segundos)
) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = starts_with("porcentaje_"),
names_to = "tipo_cuadrante",
values_to = "porcentaje_en_cuadrante"
)
write.csv(prueba_reversa, "prueba_reversa.csv")
## numero_cruces ----
colnames(prueba_reversa)
## numero_cruces antiguo vs nuevo ----
colnames(prueba_reversa)
prueba_reversa_cruces <- subset(datos_crudos, (Stage=='prueba_rev')) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = "Annulus.NE...entries", "Annulus.SW...entries",
names_to = "tipo_annulus",
values_to = "entradas_annulus"
)
prueba_reversa_cruces <- subset(datos_crudos, (Stage=='prueba_rev')) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = "Annulus.NE...entries" & "Annulus.SW...entries",
names_to = "tipo_annulus",
values_to = "entradas_annulus"
)
prueba_reversa_cruces <- subset(datos_crudos, (Stage=='prueba_rev')) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = c("Annulus.NE...entries" & "Annulus.SW...entries"),
names_to = "tipo_annulus",
values_to = "entradas_annulus"
)
prueba_reversa_cruces <- subset(datos_crudos, (Stage=='prueba_rev')) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = c("Annulus.NE...entries","Annulus.SW...entries"),
names_to = "tipo_annulus",
values_to = "entradas_annulus"
)
View(prueba_reversa_cruces)
View(prueba_reversa_cruces)
prueba_reversa_estadisticos_cruces <- prueba_reversa_cruces |>
group_by(Treatment, tipo_annulus) %>%
dplyr::summarise(N_entradas_annulus  = length(entradas_annulus),
media_entradas_annulus = mean(entradas_annulus),
sd_entradas_annulus   = sd(entradas_annulus),
se_entradas_annulus   = sd_entradas_annulus / sqrt(N_entradas_annulus))
View(prueba_reversa_estadisticos_cruces)
View(prueba_reversa_estadisticos_cruces)
ggplot() +
geom_jitter(data = prueba_reversa_cruces, aes(x = Treatment, y = entradas_annulus, colour = Treatment, fill = Treatment),
size = 1, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entreadas_annulus, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entreadas_annulus,
ymin = media_entreadas_annulus - se_entreadas_annulus, ymax = media_entreadas_annulus + se_entreadas_annulus),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_annulus)
ggplot() +
geom_jitter(data = prueba_reversa_cruces, aes(x = Treatment, y = entradas_annulus, colour = Treatment, fill = Treatment),
size = 1, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entradas_annulus, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entreadas_annulus,
ymin = media_entreadas_annulus - se_entreadas_annulus, ymax = media_entreadas_annulus + se_entreadas_annulus),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_annulus)
ggplot() +
geom_jitter(data = prueba_reversa_cruces, aes(x = Treatment, y = entradas_annulus, colour = Treatment, fill = Treatment),
size = 1, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entradas_annulus, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entreadas_annulus,
ymin = media_entradas_annulus - se_entreadas_annulus, ymax = media_entradas_annulus + se_entreadas_annulus),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_annulus)
ggplot() +
geom_jitter(data = prueba_reversa_cruces, aes(x = Treatment, y = entradas_annulus, colour = Treatment, fill = Treatment),
size = 1, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entradas_annulus, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entradas_annulus,
ymin = media_entradas_annulus - se_entreadas_annulus, ymax = media_entradas_annulus + se_entreadas_annulus),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_annulus)
ggplot() +
geom_jitter(data = prueba_reversa_cruces, aes(x = Treatment, y = entradas_annulus, colour = Treatment, fill = Treatment),
size = 1, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entradas_annulus, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos_cruces, aes(x = Treatment, y = media_entradas_annulus,
ymin = media_entradas_annulus - se_entradas_annulus, ymax = media_entradas_annulus + se_entradas_annulus),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_annulus)
## numero_cruces antiguo vs nuevo ----
colnames(prueba_reversa)
prueba_reversa_dist_media <- subset(datos_crudos, (Stage=='prueba_rev'))
prueba_reversa_dist_media <- subset(datos_crudos, (Stage=='prueba_rev'))
View(prueba_reversa_dist_media)
View(prueba_reversa_dist_media)
colnames(prueba_reversa)
prueba_reversa_dist_media <- subset(datos_crudos, (Stage=='prueba_rev')) |>
pivot_longer( # este comando le da formato a los porcentajes para graficarlo en R
cols = c("Annulus.NE...mean.distance.from","Annulus.SW...mean.distance.from"),
names_to = "tipo_annulus",
values_to = "distancia_annulus"
)
prueba_reversa_estadisticos_dist <- prueba_reversa_dist_media |>
group_by(Treatment, tipo_annulus) %>%
dplyr::summarise(N_distancia_annulus  = length(distancia_annulus),
media_distancia_annulus = mean(distancia_annulus),
sd_distancia_annulus   = sd(distancia_annulus),
se_distancia_annulus   = sd_distancia_annulus / sqrt(N_distancia_annulus))
prueba_reversa_estadisticos_dist <- prueba_reversa_dist_media |>
group_by(Treatment, tipo_annulus) %>%
dplyr::summarise(N_distancia_annulus  = length(distancia_annulus),
media_distancia_annulus = mean(distancia_annulus),
sd_distancia_annulus   = sd(distancia_annulus),
se_distancia_annulus   = sd_distancia_annulus / sqrt(N_distancia_annulus))
ggplot() +
geom_jitter(data = prueba_reversa_dist_media, aes(x = Treatment, y = distancia_annulus, colour = Treatment, fill = Treatment),
size = 1, shape = 21,)+
geom_point(data = prueba_reversa_estadisticos_dist, aes(x = Treatment, y = media_distancia_annulus, colour = Treatment),
size = 5, shape = 21)+
geom_errorbar(data = prueba_reversa_estadisticos_dist, aes(x = Treatment, y = media_distancia_annulus,
ymin = media_distancia_annulus - se_distancia_annulus, ymax = media_distancia_annulus + se_distancia_annulus),
width = .1, size = 1)+
labs(x = "X-Data", y = "Y-Data")+
ggtitle("Combined Plot")  +
facet_grid(~tipo_annulus)
setwd("C:/Users/Santi/OneDrive - ciencias.unam.mx/31_git/maestria/maestria/90_scripts/laberinto_cruz")
library(tidyverse)
datos_crudos <- read.csv("laberinto_cruz_fluox_g1.csv")
datos_crudos <- read.csv("laberinto_cruz_fluox_g1.csv")
colnames(datos_crudos)
View(datos_crudos)
View(datos_crudos)
ggplot(datos_crudos,
aes(x = Tratamiento, y = mean(Distance), group = Tratamiento,colour = Tratamiento )) +
geom_point()
ggplot(datos_crudos,
aes(x = Tratamiento, y = Distance, group = Tratamiento, colour = Tratamiento )) +
geom_point()
ggplot(datos_crudos,
aes(x = Tratamiento, y = Distance, group = Tratamiento, colour = Tratamiento )) +
geom_jitter()
ggplot(datos_crudos,
aes(x = Tratamiento, y = Distance, group = Tratamiento, colour = Tratamiento )) +
geom_violin()
ggplot(datos_crudos,
aes(x = Tratamiento, y = Brazo.abierto...time, group = Tratamiento, colour = Tratamiento )) +
geom_violin()
ggplot(datos_crudos,
aes(x = Tratamiento, y = Brazo.cerrado...time, group = Tratamiento, colour = Tratamiento )) +
geom_violin()
ggplot(datos_crudos,
aes(x = Tratamiento, y = Centro....time, group = Tratamiento, colour = Tratamiento )) +
geom_violin()
colnames(datos_crudos)
View(datos_crudos)
View(datos_crudos)
ggplot(datos_crudos,
aes(x = Tratamiento, y = Distance, group = Tratamiento, colour = Tratamiento )) +
geom_violin()+
facet_grid(~Treatment)
ggplot(datos_crudos,
aes(x = Tratamiento, y = Brazo.abierto...time, group = Tratamiento, colour = Tratamiento )) +
geom_violin()+
facet_grid(~Treatment)
ggplot(datos_crudos,
aes(x = Tratamiento, y = Brazo.cerrado...time, group = Tratamiento, colour = Tratamiento )) +
geom_violin()+
facet_grid(~Treatment)
ggplot(datos_crudos,
aes(x = Tratamiento, y = Centro....time, group = Tratamiento, colour = Tratamiento )) +
geom_violin()+
facet_grid(~Treatment)
setwd("C:/Users/Santi/OneDrive - ciencias.unam.mx/31_git/maestria/maestria/90_scripts/nado_forzado")
datos_crudos <- read.csv("datos_crudos.csv")
colnames(datos_crudos)
View(datos_crudos)
View(datos_crudos)
ggplot(datos_crudos,
aes(x = Condicion, y = Time.immobile, group = Condicion, colour = Condicion )) +
geom_violin()+
facet_grid(~Stage)
ggplot(datos_crudos,
aes(x = Condicion, y = Time.immobile, group = Condicion, colour = Condicion )) +
geom_boxplot()+
facet_grid(~Stage)
