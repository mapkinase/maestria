geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_velocidad - se_velocidad, ymax = media_velocidad + se_velocidad), width = .1, size = 1) +
labs(
title = "velocidad promedio en entrenamientos de Water Maze",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n \n Se muestra con SEM",
x = "Día de entrenamiento",
y = "velocidad promedio (m/s)"
) +
theme(
plot.margin = unit(c(1,1,1,1), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=13, color="black",
face="bold"),
axis.text = element_text(size = 7, color = "black"),
axis.text.y = element_text(size=10),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=5)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(.9,1.1),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', '3', '4', '1-Reversa', '2-Reversa'))
# Eficiencia ne ----
eficiencia_NE <- ggplot(data = entrenamientos_estadisticos, aes(x = Stage, y = media_eficiencia_NE, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_eficiencia_NE - se_eficiencia_NE, ymax = media_eficiencia_NE + se_eficiencia_NE), width = .1, size = 1) +
labs(
title = "eficiencia Annulus NE",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n  \n Se muestra con SEM
\n \n NOTA: Ignorar Entrenamientos reversa",
x = "Día de entrenamiento",
y = "eficiencia"
) +
theme(
plot.margin = unit(c(2,1,1,1), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=13, color="black",
face="bold"),
axis.text = element_text(size = 7, color = "black"),
axis.text.y = element_text(size=10),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=5)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(.9,1.3),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', '3', '4', '1-Reversa', '2-Reversa'))
# eficiencia SO ----
eficiencia_SO <- ggplot(data = entrenamientos_estadisticos, aes(x = Stage, y = media_eficiencia_SO, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_eficiencia_SO - se_eficiencia_SO, ymax = media_eficiencia_SO + se_eficiencia_SO), width = .1, size = 1) +
labs(
title = "eficiencia Annulus SO Reversa",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n \n Se muestra con SEM
\n \n NOTA: Ignorar entrenamientos 1 ,2 ,3 y 4",
x = "Día de entrenamiento",
y = "eficiencia"
) +
theme(
plot.margin = unit(c(2,1,1,1), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=13, color="black",
face="bold"),
axis.text = element_text(size = 7, color = "black"),
axis.text.y = element_text(size=10),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=5)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(.9,1.3),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', '3', '4', '1-Reversa', '2-Reversa'))
multiplot(latencia + distancia + velocidad, cols = 3)
library(ggplot2)
multiplot(latencia + distancia + velocidad, cols = 3)
multiplot(latencia + distancia + velocidad, cols = 3)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(latencia + distancia + velocidad, cols = 3)
multiplot(latencia + velocidad, cols = 3)
multiplot(latencia)
multiplot(latencia + velocidad)
multiplot(latencia, velocidad)
multiplot(latencia, velocidad, cols = 2)
multiplot(latencia, velocidad, cols = 3)
multiplot(latencia, distancia, velocidad, cols = 2)
multiplot(latencia, distancia, velocidad, cols = 3)
multiplot(eficiencia_NE, eficiencia_SO, cols = 2)
pruebas <- read.csv('datos_crudos_any_maze_para_pruebas.csv')
pruebas <- read.csv('water_maze/datos_crudos_any_maze_para_pruebas.csv')
colnames(pruebas)
## Estadísticos ----
pruebas_estadisticos <- pruebas |>
group_by(Treatment, Stage) %>%
dplyr::summarise(
# cuadrante_blanco
N_cuadrante_blanco  = sum(!is.na(cuadrante_blanco)),
media_cuadrante_blanco = mean(cuadrante_blanco, na.rm=TRUE),
sd_cuadrante_blanco = sd(cuadrante_blanco, na.rm=TRUE),
se_cuadrante_blanco = sd_cuadrante_blanco / sqrt(N_cuadrante_blanco),
# cuadrante_opuestos
N_cuadrante_opuestos  = sum(!is.na(cuadrante_opuestos)),
media_cuadrante_opuestos = mean(cuadrante_opuestos, na.rm=TRUE),
sd_cuadrante_opuestos = sd(cuadrante_opuestos, na.rm=TRUE),
se_cuadrante_opuestos = sd_cuadrante_opuestos / sqrt(N_cuadrante_opuestos),
# annulus_cruces_blanco
N_annulus_cruces_blanco  = sum(!is.na(annulus_cruces_blanco)),
media_annulus_cruces_blanco = mean(annulus_cruces_blanco, na.rm=TRUE),
sd_annulus_cruces_blanco = sd(annulus_cruces_blanco, na.rm=TRUE),
se_annulus_cruces_blanco = sd_annulus_cruces_blanco / sqrt(N_annulus_cruces_blanco),
# annulus_dist_promedio_blanco
N_annulus_dist_promedio_blanco  = sum(!is.na(annulus_dist_promedio_blanco)),
media_annulus_dist_promedio_blanco = mean(annulus_dist_promedio_blanco, na.rm=TRUE),
sd_annulus_dist_promedio_blanco = sd(annulus_dist_promedio_blanco, na.rm=TRUE),
se_annulus_dist_promedio_blanco = sd_annulus_dist_promedio_blanco / sqrt(N_annulus_dist_promedio_blanco)
)
colnames(pruebas_estadisticos)
## porcentaje_cuadrante blanco ----
ggplot(data = pruebas_estadisticos, aes(x = Stage, y = media_cuadrante_blanco, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_cuadrante_blanco - se_cuadrante_blanco, ymax = media_cuadrante_blanco + se_cuadrante_blanco), width = .1, size = 1) +
labs(
title = "porcentaje en cuadrante blanco en 3 pruebas",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n Se muestra con SEM",
x = "número de prueba",
y = "(%)"
) +
theme(
plot.margin = unit(c(2,2,2,2), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=22, color="black",
face="bold"),
axis.text = element_text(size = 13, color = "black"),
axis.text.y = element_text(size=17),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=10)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(1,1),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', 'reversa'))
## porcentaje_cuadrantes opuestos ----
ggplot(data = pruebas_estadisticos, aes(x = Stage, y = media_cuadrante_opuestos, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_cuadrante_opuestos - se_cuadrante_opuestos, ymax = media_cuadrante_opuestos + se_cuadrante_opuestos), width = .1, size = 1) +
labs(
title = "porcentaje en cuadrante opuestos en 3 pruebas",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n Se muestra con SEM",
x = "número de prueba",
y = "(%)"
) +
theme(
plot.margin = unit(c(2,2,2,2), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=22, color="black",
face="bold"),
axis.text = element_text(size = 13, color = "black"),
axis.text.y = element_text(size=17),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=10)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(1,1),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', 'reversa'))
## numero_cruces ----
ggplot(data = pruebas_estadisticos, aes(x = Stage, y = media_annulus_cruces_blanco, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_annulus_cruces_blanco - se_annulus_cruces_blanco, ymax = media_annulus_cruces_blanco + se_annulus_cruces_blanco), width = .1, size = 1) +
labs(
title = "cruces",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n Se muestra con SEM",
x = "número de prueba",
y = "(%)"
) +
theme(
plot.margin = unit(c(2,2,2,2), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=22, color="black",
face="bold"),
axis.text = element_text(size = 13, color = "black"),
axis.text.y = element_text(size=17),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=10)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(1,1),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', 'reversa'))
## distancia_promedio_annulus ----
ggplot(data = pruebas_estadisticos, aes(x = Stage, y = media_annulus_dist_promedio_blanco, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_annulus_dist_promedio_blanco - se_annulus_dist_promedio_blanco, ymax = media_annulus_dist_promedio_blanco + se_annulus_dist_promedio_blanco), width = .1, size = 1) +
labs(
title = "dist",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n Se muestra con SEM",
x = "número de prueba",
y = "(%)"
) +
theme(
plot.margin = unit(c(2,2,2,2), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=22, color="black",
face="bold"),
axis.text = element_text(size = 13, color = "black"),
axis.text.y = element_text(size=17),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=10)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(1,1),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', 'reversa'))
## Pendiente ; comparar con annulus antiguo
# Pasar a formato largo
pruebas <- read.csv('datos_crudos_any_maze_para_pruebas.csv') |>
group_by(Treatment, Stage) |>
pivot_longer(
cols = starts_with('cuadrante'),
names_to = 'tipo_cuadrante',
values_to = 'porcentaje_cuadrante'
) |>
pivot_longer(
cols = starts_with('annulus_cruces'),
names_to = 'tipo_annulus_cruces',
values_to = 'numero_cruces'
) |>
pivot_longer(
cols = starts_with('annulus_dist'),
names_to = 'tipo_annulus_dist',
values_to = 'distancia_promedio_annulus')
pruebas <- read.csv('water_maze/datos_crudos_any_maze_para_pruebas.csv')
colnames(pruebas)
## Estadísticos ----
pruebas_estadisticos <- pruebas |>
group_by(Treatment, Stage) %>%
dplyr::summarise(
# cuadrante_blanco
N_cuadrante_blanco  = sum(!is.na(cuadrante_blanco)),
media_cuadrante_blanco = mean(cuadrante_blanco, na.rm=TRUE),
sd_cuadrante_blanco = sd(cuadrante_blanco, na.rm=TRUE),
se_cuadrante_blanco = sd_cuadrante_blanco / sqrt(N_cuadrante_blanco),
# cuadrante_opuestos
N_cuadrante_opuestos  = sum(!is.na(cuadrante_opuestos)),
media_cuadrante_opuestos = mean(cuadrante_opuestos, na.rm=TRUE),
sd_cuadrante_opuestos = sd(cuadrante_opuestos, na.rm=TRUE),
se_cuadrante_opuestos = sd_cuadrante_opuestos / sqrt(N_cuadrante_opuestos),
# annulus_cruces_blanco
N_annulus_cruces_blanco  = sum(!is.na(annulus_cruces_blanco)),
media_annulus_cruces_blanco = mean(annulus_cruces_blanco, na.rm=TRUE),
sd_annulus_cruces_blanco = sd(annulus_cruces_blanco, na.rm=TRUE),
se_annulus_cruces_blanco = sd_annulus_cruces_blanco / sqrt(N_annulus_cruces_blanco),
# annulus_dist_promedio_blanco
N_annulus_dist_promedio_blanco  = sum(!is.na(annulus_dist_promedio_blanco)),
media_annulus_dist_promedio_blanco = mean(annulus_dist_promedio_blanco, na.rm=TRUE),
sd_annulus_dist_promedio_blanco = sd(annulus_dist_promedio_blanco, na.rm=TRUE),
se_annulus_dist_promedio_blanco = sd_annulus_dist_promedio_blanco / sqrt(N_annulus_dist_promedio_blanco)
)
colnames(pruebas_estadisticos)
## porcentaje_cuadrante blanco ----
ggplot(data = pruebas_estadisticos, aes(x = Stage, y = media_cuadrante_blanco, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_cuadrante_blanco - se_cuadrante_blanco, ymax = media_cuadrante_blanco + se_cuadrante_blanco), width = .1, size = 1) +
labs(
title = "porcentaje en cuadrante blanco en 3 pruebas",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n Se muestra con SEM",
x = "número de prueba",
y = "(%)"
) +
theme(
plot.margin = unit(c(2,2,2,2), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=22, color="black",
face="bold"),
axis.text = element_text(size = 13, color = "black"),
axis.text.y = element_text(size=17),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=10)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(1,1),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', 'reversa'))
## porcentaje_cuadrantes opuestos ----
ggplot(data = pruebas_estadisticos, aes(x = Stage, y = media_cuadrante_opuestos, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_cuadrante_opuestos - se_cuadrante_opuestos, ymax = media_cuadrante_opuestos + se_cuadrante_opuestos), width = .1, size = 1) +
labs(
title = "porcentaje en cuadrante opuestos en 3 pruebas",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n Se muestra con SEM",
x = "número de prueba",
y = "(%)"
) +
theme(
plot.margin = unit(c(2,2,2,2), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=22, color="black",
face="bold"),
axis.text = element_text(size = 13, color = "black"),
axis.text.y = element_text(size=17),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=10)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(1,1),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', 'reversa'))
## numero_cruces ----
ggplot(data = pruebas_estadisticos, aes(x = Stage, y = media_annulus_cruces_blanco, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_annulus_cruces_blanco - se_annulus_cruces_blanco, ymax = media_annulus_cruces_blanco + se_annulus_cruces_blanco), width = .1, size = 1) +
labs(
title = "cruces",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n Se muestra con SEM",
x = "número de prueba",
y = "(%)"
) +
theme(
plot.margin = unit(c(2,2,2,2), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=22, color="black",
face="bold"),
axis.text = element_text(size = 13, color = "black"),
axis.text.y = element_text(size=17),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=10)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(1,1),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', 'reversa'))
## distancia_promedio_annulus ----
ggplot(data = pruebas_estadisticos, aes(x = Stage, y = media_annulus_dist_promedio_blanco, colour = Treatment)) +
geom_point(aes(colour = Treatment), alpha = 1, size = 4) +
geom_line(aes(group = Treatment)) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(ymin = media_annulus_dist_promedio_blanco - se_annulus_dist_promedio_blanco, ymax = media_annulus_dist_promedio_blanco + se_annulus_dist_promedio_blanco), width = .1, size = 1) +
labs(
title = "dist",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n Se muestra con SEM",
x = "número de prueba",
y = "(%)"
) +
theme(
plot.margin = unit(c(2,2,2,2), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=22, color="black",
face="bold"),
axis.text = element_text(size = 13, color = "black"),
axis.text.y = element_text(size=17),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=10)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(1,1),
legend.text = element_text(size=10),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', 'reversa'))
## Pendiente ; comparar con annulus antiguo
# Pasar a formato largo
pruebas <- read.csv('water_maze/datos_crudos_any_maze_para_pruebas.csv') |>
group_by(Treatment, Stage) |>
pivot_longer(
cols = starts_with('cuadrante'),
names_to = 'tipo_cuadrante',
values_to = 'porcentaje_cuadrante'
) |>
pivot_longer(
cols = starts_with('annulus_cruces'),
names_to = 'tipo_annulus_cruces',
values_to = 'numero_cruces'
) |>
pivot_longer(
cols = starts_with('annulus_dist'),
names_to = 'tipo_annulus_dist',
values_to = 'distancia_promedio_annulus')
# entropía con datos de rtrack
library(Rtrack)
rtrack <- read.csv("water_maze/fluoxetina_grupo_1_resultados_crudos_totales.csv")
colnames(rtrack)
entropia_pruebas <- rtrack |>
group_by(tratamiento, X_Day) |>
select(X_Day, Probe, tratamiento, roaming.entropy) |>
filter(str_detect(Probe, "TRUE"))
colnames(entropia_pruebas)
# Graficos
ggplot(data = entropia_pruebas, aes(x = X_Day, y = roaming.entropy, colour = tratamiento)) +
geom_boxplot()+
facet_grid(~ X_Day)
# Con estadísticos
entropia_estadistica <- entropia_pruebas |>
group_by(tratamiento, X_Day) %>%
dplyr::summarise(
N_entropia  = sum(!is.na(roaming.entropy)),
media_entropia = mean(roaming.entropy, na.rm=TRUE),
sd_entropia = sd(roaming.entropy, na.rm=TRUE),
se_entropia = sd_entropia / sqrt(N_entropia)
)
colnames(entropia_estadistica)
# gráficos con estadística
ggplot(data = entropia_estadistica, aes(x = X_Day ,
y = media_entropia,
group = tratamiento,
colour = tratamiento)) +
geom_line(aes(colour = tratamiento), alpha = 1, size = 2) +
geom_point(aes(colour = tratamiento), alpha = 1, size = 4) +
scale_color_manual(values = c("#ff1493", "#4c00ff")) +
geom_errorbar(aes(
ymin = media_entropia - se_entropia,
ymax = media_entropia + se_entropia), width = .1, size = 1) +
#  Labelling as desired
labs(
title = "Tiempo en Movimiento",
subtitle = "Fluoxetina Grupo 1",
caption = "n = 7  [CUMS_ctrl] y n = 8 [CUMS_fluox] \n SEM",
x = "Tratamiento",
y = "Tiempo de movilidad (s)"
) +
theme(
plot.margin = unit(c(2,2,2,2), "cm"),
panel.background = element_blank(),
axis.line = element_line(color = "#1209c8"),
axis.title = element_text(size=22, color="black",
face="bold"),
axis.text = element_text(size = 22, color = "black"),
axis.text.y = element_text(size=17),
axis.ticks.x = element_blank(),
axis.text.x = element_text(margin = margin(t=10)),
axis.title.y=element_text(margin = margin(r=10)),
legend.position = c(.7, 1.2),
legend.text = element_text(size=20),
legend.background = element_rect(color="black")) +
scale_x_discrete(labels=c('1', '2', 'reversa'))
#   scale_y_continuous(expand = expansion(0), limits = c(30, 70), breaks = seq(30,70,5))+
#
